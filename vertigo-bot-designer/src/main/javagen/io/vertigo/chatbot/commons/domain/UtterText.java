/**
 * vertigo - simple java starter
 *
 * Copyright (C) 2020, Vertigo.io, team@vertigo.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.vertigo.chatbot.commons.domain;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.UID;
import io.vertigo.dynamo.domain.model.VAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class UtterText implements Entity {
	private static final long serialVersionUID = 1L;

	private Long uttId;
	private String text;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "ASmallTalkUtterText",
			fkFieldName = "smtId",
			primaryDtDefinitionName = "DtSmallTalk",
			primaryIsNavigable = true,
			primaryRole = "SmallTalk",
			primaryLabel = "SmallTalk",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtUtterText",
			foreignIsNavigable = false,
			foreignRole = "UtterText",
			foreignLabel = "UtterText",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.vertigo.chatbot.commons.domain.SmallTalk> smtIdAccessor = new VAccessor<>(io.vertigo.chatbot.commons.domain.SmallTalk.class, "SmallTalk");

	/** {@inheritDoc} */
	@Override
	public UID<UtterText> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'ID'.
	 * @return Long uttId <b>Obligatoire</b>
	 */
	@Field(domain = "DoId", type = "ID", required = true, label = "ID")
	public Long getUttId() {
		return uttId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'ID'.
	 * @param uttId Long <b>Obligatoire</b>
	 */
	public void setUttId(final Long uttId) {
		this.uttId = uttId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Text'.
	 * @return String text <b>Obligatoire</b>
	 */
	@Field(domain = "DoText", required = true, label = "Text")
	public String getText() {
		return text;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Text'.
	 * @param text String <b>Obligatoire</b>
	 */
	public void setText(final String text) {
		this.text = text;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'SmallTalk'.
	 * @return Long smtId
	 */
	@Field(domain = "DoId", type = "FOREIGN_KEY", label = "SmallTalk")
	public Long getSmtId() {
		return (Long) smtIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'SmallTalk'.
	 * @param smtId Long
	 */
	public void setSmtId(final Long smtId) {
		smtIdAccessor.setId(smtId);
	}

 	/**
	 * Association : SmallTalk.
	 * @return l'accesseur vers la propriété 'SmallTalk'
	 */
	public VAccessor<io.vertigo.chatbot.commons.domain.SmallTalk> smallTalk() {
		return smtIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
