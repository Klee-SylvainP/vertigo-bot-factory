package io.vertigo.chatbot.commons.domain


/*********************/
/* **** Chatbot **** */
/*********************/
create DtDefinition DtChatbot {
	stereotype : "KeyConcept"
	id    botId 		{domain: DoId 			label: "ID"}
	field name 			{domain: DoLabel 		label: "Name" 			cardinality : "1"}
	field description 	{domain: DoText 		label: "Description"	cardinality : "1"}
	field creationDate	{domain: DoLocaldate 	label: "Creation date" 	cardinality : "1"}
	field status		{domain: DoCode		 	label: "Status" 		cardinality : "1"}
}

create Association AChatbotMediaFileInfo {
	fkFieldName : "filIdAvatar"
    
 	dtDefinitionA : DtChatbot
	dtDefinitionB : DtMediaFileInfo
	
	type : "*>?"
	
	labelB : "Avatar"
}

create Association AChatbotUtterTextWelcome {
	fkFieldName : "uttIdWelcome"
    
 	dtDefinitionA : DtChatbot
	dtDefinitionB : DtUtterText
	
	type : "*>1"
	
	roleB : "utterTextWelcome"
	labelB : "Welcome text"
}

create Association AChatbotWelcomeButtons {
	fkFieldName : "botIdWelcome"
    
 	dtDefinitionA : DtResponseButton
	type : "*>?"
	dtDefinitionB : DtChatbot
	
	labelB : "welcome buttons"
	roleB : "chatbotWelcome"
}

create Association AChatbotUtterTextDefault {
	fkFieldName : "uttIdDefault"
    
 	dtDefinitionA : DtChatbot
	dtDefinitionB : DtUtterText
	
	type : "*>1"
	
	roleB : "utterTextDefault"
	labelB : "Default text"
}

create Association AChatbotDefaultButtons {
	fkFieldName : "botIdDefault"
    
 	dtDefinitionA : DtResponseButton
	type : "*>?"
	dtDefinitionB : DtChatbot
	
	labelB : "Default buttons"
	roleB : "chatbotDefault"
}

/************************/
/* **** Small talk **** */
/************************/
create DtDefinition DtSmallTalk {
	id    smtId 		{domain: DoId 		label: "ID"}
	field title 		{domain: DoLabel 	label: "Title" 			cardinality : "1"}
	field description	{domain: DoLabel 	label: "Description" 	}
	field isEnabled 	{domain: DoYesNo 	label: "Enabled" 		cardinality : "1"}
}

create Association ASmallTalkChatbot {
	fkFieldName : "botId" /* NPE sans explication si ya pas */
    
 	dtDefinitionA : DtSmallTalk
	type : "*>1"
	dtDefinitionB : DtChatbot
	
	labelB : "Chatbot"
}

create DtDefinition DtResponseType {
	stereotype : "StaticMasterData"
	id    rtyId 		{domain: DoCode 	label: "ID"}
	field label 		{domain: DoLabel 	label: "Title" 		cardinality : "1"}
	field sortOrder 	{domain: DoNumber 	label: "Order" 		cardinality : "1"}
	values : `{
        "RICH_TEXT" : {
            "rtyId" : "RICH_TEXT",
            "label" : "Rich text",
            "sortOrder" : 1
        },
        "RANDOM_TEXT" : {
            "rtyId" : "RANDOM_TEXT",
            "label" : "Random text",
            "sortOrder" : 2
        }

    }`
    sortField : "sortOrder"
 	displayField : "label"
}

create Association ASmallTalkResponseType {
	fkFieldName : "rtyId"
    
 	dtDefinitionA : DtSmallTalk
	type : "*>1"
	dtDefinitionB : DtResponseType
	
	labelB : "Response type"
}

create DtDefinition DtNluTrainingSentence {
	id    ntsId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoLabel 	label: "Text" cardinality : "1"}
}

create Association ASmallTalkNluTrainingSentence {
	fkFieldName : "smtId"
    
	dtDefinitionA : DtNluTrainingSentence
	type : "*>1"
 	dtDefinitionB : DtSmallTalk
	
	labelB : "SmallTalk"
}

create DtDefinition DtUtterText {
	id    uttId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoText 	label: "Text" cardinality : "1"}
}

create Association ASmallTalkUtterText {
	fkFieldName : "smtId"
    
 	dtDefinitionA : DtUtterText
	type : "*>?"
	dtDefinitionB : DtSmallTalk
	
	labelB : "SmallTalk"
}

create DtDefinition DtResponseButton {
	id    btnId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoText 	label: "Text" cardinality : "1"}
}

create Association ASmallTalkResponseButtons {
	fkFieldName : "smtId"
    
 	dtDefinitionA : DtResponseButton
	type : "*>?"
	dtDefinitionB : DtSmallTalk
	
	labelB : "SmallTalk"
}

create Association AResponseButtonSmallTalkResponse {
	fkFieldName : "smtIdResponse"
    
 	dtDefinitionA : DtResponseButton
	type : "*>1"
	dtDefinitionB : DtSmallTalk
	
	labelB : "SmallTalkResponse"
	roleB : "SmallTalkResponse"
}

/**********************/
/* **** Training **** */
/**********************/
create DtDefinition DtTraining {
	id    traId 		{domain: DoId 			label: "ID"}
	field startTime		{domain: DoInstant 		label: "Start time"			cardinality : "1"}
	field endTime		{domain: DoInstant 		label: "End time" 			}
	field versionNumber	{domain: DoNumber 		label: "Version" 			cardinality : "1"}
	field status		{domain: DoCode			label: "Status" 			cardinality : "1"}
	field log			{domain: DoText			label: "Log"	 			}
	field infos			{domain: DoText			label: "Informations"	 	}
	field warnings		{domain: DoText			label: "Warnings"	 		}
	field nluThreshold	{domain: DoPercentage 	label: "NLU Threshold" 		cardinality : "1"}
	computed duration 	{domain: DoLabel 		label: "Duration"
						 expression:"return io.vertigo.chatbot.commons.ChatbotUtils.durationBetween(getStartTime(), getEndTime());" }
}

create Association ATrainingChatbot {
	fkFieldName : "botId"
    
 	dtDefinitionA : DtTraining
	type : "*>1"
	dtDefinitionB : DtChatbot
	
	labelB : "Chatbot"
}

create Association ATrainingMediaFileInfo {
	fkFieldName : "filIdModel"
    
 	dtDefinitionA : DtTraining
	type : "*>?"
	dtDefinitionB : DtMediaFileInfo
	
	
	labelB : "Model"
}

/*******************/
/* **** Nodes **** */
/*******************/
create DtDefinition DtChatbotNode {
	id    nodId 		{domain: DoId 		label: "ID"}
	field name			{domain: DoLabel 	label: "Name" 				cardinality : "1"}
	field url			{domain: DoUrl 		label: "URL" 				cardinality : "1"}
	field isDev			{domain: DoYesNo 	label: "Dev node" 			cardinality : "1"}
	field color			{domain: DoColor 	label: "Color" 				cardinality : "1"}
	field apiKey		{domain: DoLabel 	label: "ApiKey" 			cardinality : "1"}
}

create Association ANodeChatbot {
	fkFieldName : "botId"
    
 	dtDefinitionA : DtChatbotNode
	type : "*>1"
	dtDefinitionB : DtChatbot
	
	labelB : "Chatbot"
}

create Association ANodeTraining{
	fkFieldName : "traId"
    
 	dtDefinitionA : DtChatbotNode
	type : "*>?"
	dtDefinitionB : DtTraining
	
	labelB : "Loaded model"
}
