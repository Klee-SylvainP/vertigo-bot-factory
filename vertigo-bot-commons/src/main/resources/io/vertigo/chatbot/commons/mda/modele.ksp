package io.vertigo.chatbot.commons.domain

create DtDefinition DtChatbot{
	id    botId 		{domain: DoId 			label: "ID"}
	field name 			{domain: DoLabel 		label: "Name" 			required: "true"}
	field creationDate	{domain: DoLocaldate 	label: "Creation date" 	required: "true"}
	field status		{domain: DoCode		 	label: "Status" 		required: "true"}
}

create DtDefinition DtIntent {
	id    intId 		{domain: DoId 		label: "ID"}
	field title 		{domain: DoLabel 	label: "Title" 			required: "true"}
	field description	{domain: DoLabel 	label: "Description" 	required: "false"}
	field isSmallTalk 	{domain: DoYesNo 	label: "SmallTalk" 		required: "true"}
	field isEnabled 	{domain: DoYesNo 	label: "Enabled" 		required: "true"}
}

create Association AIntentChatbot {
	fkFieldName : "botId" /* NPE sans explication si ya pas */
    
 	dtDefinitionA : DtIntent
	dtDefinitionB : DtChatbot
	
	type : "*>1"
	
	labelB : "Chatbot"
}

create DtDefinition DtIntentTrainingSentence {
	id    itsId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoLabel 	label: "Text" required: "true"}
}

create Association AIntentIntentTrainingSentence {
	fkFieldName : "intId"
    
 	dtDefinitionA : DtIntentTrainingSentence
	dtDefinitionB : DtIntent
	
	multiplicityA : "0..*"
	multiplicityB : "1..1"
	navigabilityA : "true"
	navigabilityB : "false" /* pas pris en compte ! */
	
	labelB : "Intent"
}

create DtDefinition DtAction {
	id    actId 	{domain: DoId 		label: "ID"}
	field title 	{domain: DoLabel 	label: "Text" required: "true"}
}

create DtDefinition DtUtterText {
	id    utxId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoLabel 	label: "Text" required: "true"}
}

create Association AActionChatbot {
	fkFieldName : "botId"
    
 	dtDefinitionA : DtAction
	dtDefinitionB : DtChatbot
	
	type : "*>1"
	
	labelB : "Chatbot"
}

create Association AIntentUtterText {
	fkFieldName : "intId"
    
 	dtDefinitionA : DtUtterText
	dtDefinitionB : DtIntent
	
	multiplicityA : "0..*"
	multiplicityB : "0..1"
	navigabilityA : "true"
	navigabilityB : "false" /* pas pris en compte ! */
	
	labelB : "Intent"
}

create Association AActionUtterText {
	fkFieldName : "actId"
    
 	dtDefinitionA : DtUtterText
	dtDefinitionB : DtAction
	
	multiplicityA : "0..*"
	multiplicityB : "0..1"
	navigabilityA : "true"
	navigabilityB : "false" /* pas pris en compte ! */
	
	labelB : "Action"
}

create DtDefinition DtTraining {
	id    traId 		{domain: DoId 		label: "ID"}
	field startTime		{domain: DoInstant 	label: "Start time"			required: "true"}
	field endTime		{domain: DoInstant 	label: "End time" 			required: "false"}
	field versionNumber	{domain: DoNumber 	label: "Version" 			required: "true"}
	field tag			{domain: DoLabel 	label: "Tag" 				required: "false"}
	field valid 		{domain: DoYesNo 	label: "Valid" 				required: "true"}
	computed duration 	{domain: DoLabel 	label: "Duration"
						 expression:"return io.vertigo.chatbot.commons.ChatbotUtils.durationBetween(getStartTime(), getEndTime());" }
}

create Association ATrainingChatbot {
	fkFieldName : "botId"
    
 	dtDefinitionA : DtTraining
	dtDefinitionB : DtChatbot
	
	type : "*>1"
	
	labelB : "Chatbot"
}
