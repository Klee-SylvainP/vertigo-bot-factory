package io.vertigo.chatbot.commons.domain


/*********************/
/* **** Comptes **** */
/*********************/
create DtDefinition DtPerson {
	id perId 		{domain: DoId 		label:"Id"}
	field login 	{domain: DoLabel 	label: "Login" 		required:"false"}
	field name 		{domain: DoLabel 	label: "Name" 		required:"false"}
	field password 	{domain: DoPassword label: "Password" 	required:"false"}
}


create DtDefinition DtGroups {
	id grpId 		{domain: DoId 		label:"Id"}
	field name 		{domain: DoLabel 	label: "Name" required:"false"}
}


create Association APersonGroups {
	fkFieldName : "grpId"
    
 	dtDefinitionA : DtPerson
 	type : "*>?"
	dtDefinitionB : DtGroups
	
	labelB : "Group"
}

/*********************/
/* **** Chatbot **** */
/*********************/
create DtDefinition DtChatbot {
	id    botId 		{domain: DoId 			label: "ID"}
	field name 			{domain: DoLabel 		label: "Name" 			required: "true"}
	field description 	{domain: DoText 		label: "Description"	required: "true"}
	field creationDate	{domain: DoLocaldate 	label: "Creation date" 	required: "true"}
	field status		{domain: DoCode		 	label: "Status" 		required: "true"}
}

create Association AChatbotMediaFileInfo {
	fkFieldName : "filIdAvatar"
    
 	dtDefinitionA : DtChatbot
	dtDefinitionB : DtMediaFileInfo
	
	type : "*>?"
	
	labelB : "Avatar"
}

create Association AChatbotUtterTextWelcome {
	fkFieldName : "uttIdWelcome"
    
 	dtDefinitionA : DtChatbot
	dtDefinitionB : DtUtterText
	
	type : "*>1"
	
	roleB : "utterTextWelcome"
	labelB : "Welcome text"
}

create Association AChatbotUtterTextDefault {
	fkFieldName : "uttIdDefault"
    
 	dtDefinitionA : DtChatbot
	dtDefinitionB : DtUtterText
	
	type : "*>1"
	
	roleB : "utterTextDefault"
	labelB : "Default text"
}

/************************/
/* **** Small talk **** */
/************************/
create DtDefinition DtSmallTalk {
	id    smtId 		{domain: DoId 		label: "ID"}
	field title 		{domain: DoLabel 	label: "Title" 			required: "true"}
	field description	{domain: DoLabel 	label: "Description" 	required: "false"}
	field isEnabled 	{domain: DoYesNo 	label: "Enabled" 		required: "true"}
}

create Association ASmallTalkChatbot {
	fkFieldName : "botId" /* NPE sans explication si ya pas */
    
 	dtDefinitionA : DtSmallTalk
	type : "*>1"
	dtDefinitionB : DtChatbot
	
	
	labelB : "Chatbot"
}

create DtDefinition DtNluTrainingSentence {
	id    ntsId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoLabel 	label: "Text" required: "true"}
}

create Association ASmallTalkNluTrainingSentence {
	fkFieldName : "smtId"
    
	dtDefinitionA : DtNluTrainingSentence
	type : "*>1"
 	dtDefinitionB : DtSmallTalk
	
	labelB : "SmallTalk"
}

create DtDefinition DtUtterText {
	id    uttId 	{domain: DoId 		label: "ID"}
	field text 		{domain: DoText 	label: "Text" required: "true"}
}

create Association ASmallTalkUtterText {
	fkFieldName : "smtId"
    
 	dtDefinitionA : DtUtterText
	type : "*>?"
	dtDefinitionB : DtSmallTalk
	
	labelB : "SmallTalk"
}

/**********************/
/* **** Training **** */
/**********************/
create DtDefinition DtTraining {
	id    traId 		{domain: DoId 		label: "ID"}
	field startTime		{domain: DoInstant 	label: "Start time"			required: "true"}
	field endTime		{domain: DoInstant 	label: "End time" 			required: "false"}
	field versionNumber	{domain: DoNumber 	label: "Version" 			required: "true"}
	field status		{domain: DoCode		label: "Status" 			required: "true"}
	field log			{domain: DoText		label: "Log"	 			required: "false"}
	field infos			{domain: DoText		label: "Informations"	 	required: "false"}
	field warnings		{domain: DoText		label: "Warnings"	 		required: "false"}
	computed duration 	{domain: DoLabel 	label: "Duration"
						 expression:"return io.vertigo.chatbot.commons.ChatbotUtils.durationBetween(getStartTime(), getEndTime());" }
}

create Association ATrainingChatbot {
	fkFieldName : "botId"
    
 	dtDefinitionA : DtTraining
	type : "*>1"
	dtDefinitionB : DtChatbot
	
	labelB : "Chatbot"
}

create Association ATrainingMediaFileInfo {
	fkFieldName : "filIdModel"
    
 	dtDefinitionA : DtTraining
	type : "*>?"
	dtDefinitionB : DtMediaFileInfo
	
	
	labelB : "Model"
}

/*******************/
/* **** Nodes **** */
/*******************/
create DtDefinition DtChatbotNode {
	id    nodId 		{domain: DoId 		label: "ID"}
	field name			{domain: DoLabel 	label: "Name" 				required: "true"}
	field url			{domain: DoUrl 		label: "URL" 				required: "true"}
	field isDev			{domain: DoYesNo 	label: "Dev node" 			required: "true"}
	field color			{domain: DoColor 	label: "Color" 				required: "true"}
	field apiKey		{domain: DoLabel 	label: "ApiKey" 			required: "true"}
}

create Association ANodeChatbot {
	fkFieldName : "botId"
    
 	dtDefinitionA : DtChatbotNode
	type : "*>1"
	dtDefinitionB : DtChatbot
	
	labelB : "Chatbot"
}

create Association ANodeTraining{
	fkFieldName : "traId"
    
 	dtDefinitionA : DtChatbotNode
	type : "*>?"
	dtDefinitionB : DtTraining
	
	labelB : "Loaded model"
}
